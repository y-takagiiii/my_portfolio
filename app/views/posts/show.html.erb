<div class="container mx-auto my-3">
  <div class="col-span-1 card w-auto bg-base-100 shadow-xl mt-4 mx-1">
    <div class="flex justify-between">
      <p>投稿者 <%= @post.user.name %></p>
      <p><%= @post.count_button_pressed_times %>笑い</p>
    </div>
    <figure class="flex justify-between" >
      <div id="clapp-icon_left" class="opacity-0 mr-3"><i class="fa-solid fa-hands-clapping fa-4x"></i></div>
      <div class="my-3" id="player"></div>
      <div id="clapp-icon_right" class="opacity-0 ml-3"><i class="fa-solid fa-hands-clapping fa-4x"></i></div>
    </figure>
    <div class="card-body">
      <h2 class="card-title">
        <%= @post.video.title %>
        <div class="badge badge-secondary">NEW</div>
      </h2>
      <p><%= @post.video.description %></p>
      <div class="card-actions justify-end">
        <div class="badge badge-outline">タグ1</div>
        <div class="badge badge-outline">タグ2</div>
      </div>
      <% if current_user.own?(@post) %>
        <div class="card-actions justify-end">
          <div class="badge badge-outline">編集</div>
          <div class="badge badge-outline"><%= link_to '削除', post_path(@post), data: { turbo_method: :delete, turbo_confirm: '削除しますか？' } %></div>
        </div>
      <% end %>
    </div>
  </div>

<script>
  // IFrame Player API の読み込みタグを挿入
  var tag = document.createElement('script')
  tag.src = "https://www.youtube.com/iframe_api"
  var firstScriptTag = document.getElementsByTagName('script')[0]
  firstScriptTag.parentNode.insertBefore(tag, firstScriptTag)

  // 関数onYouTubeIframeAPIReadyでiframeとYoutubeプレイヤーを作成
  var player
  function onYouTubeIframeAPIReady() {
    player = new YT.Player('player', {
      videoId: '<%= @post.video.youtube_id %>',
      height: '576',
      width: '1024', // アスペクト比16:9 1280:720 1024:576 896:504 768:432 640:360
      playerVars: {
        rel: 0,
        fs: 0,
        modestbranding: 1,
      },
      events: {
        'onStateChange': onPlayerStateChange
      }
    })
  }

  let buttonPressedTime = []
  <% @post.laugh_logs.each do |log| %>
    buttonPressedTime.push('<%= log.button_pressed_time.floor(1) %>')
  <% end %>

  const clapp_icon_left = document.getElementById('clapp-icon_left')
  const clapp_icon_right = document.getElementById('clapp-icon_right')

  let timerId
  function onPlayerStateChange(e) {
    if (timerId) {
      clearInterval(timerId)
    }
    if (e.data == YT.PlayerState.PLAYING) {
      timerId = setInterval(() => {
        const passedTime = player.getCurrentTime().toFixed(1)
        if (buttonPressedTime.includes(passedTime)) {
          setTimeout(() => {
            clapp_icon_left.className = "opacity-1 mr-3"
            clapp_icon_right.className = "opacity-1 ml-3"
          })
          setTimeout(() => {
            clapp_icon_left.className = "opacity-0 mr-3"
            clapp_icon_right.className = "opacity-0 ml-3"
          }, 500)
        }
      }, 100)
    } else {
      clearInterval(timerId)
    }
  }

</script>

</div>
